version: '3.4'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './shared/nginx/vhost.d:/etc/nginx/vhost.d'
      - './shared/nginx/certs:/etc/nginx/certs:ro'
    networks:
      proxy: null
      playground:
        aliases:
          - sts.playground.local
          - is-admin.playground.local
          - is-admin-api.playground.local
          - playground-api.playground.local
    restart: always

# Skoruba Identity Server projects
  playground.identityserver.admin:
    image: '${DOCKER_REGISTRY-}playground-duende-identityserver-admin'
    build:
      context: .
      dockerfile: Playground.IdentityServer/src/Playground.IdentityServer.Admin/Dockerfile
    container_name: playground-duende-identityserver-admin
    environment:
      - VIRTUAL_HOST=is-admin.playground.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://is-admin.playground.local'
      - 'AdminConfiguration__IdentityAdminRedirectUri=https://is-admin.playground.local/signin-oidc'
      - 'AdminConfiguration__IdentityServerBaseUrl=https://sts.playground.local'
      - AdminConfiguration__RequireHttpsMetadata=false
      - 'IdentityServerData__Clients__0__ClientUri=https://is-admin.playground.local'
      - 'IdentityServerData__Clients__0__RedirectUris__0=https://is-admin.playground.local/signin-oidc'
      - 'IdentityServerData__Clients__0__FrontChannelLogoutUri=https://is-admin.playground.local/signin-oidc'
      - 'IdentityServerData__Clients__0__PostLogoutRedirectUris__0=https://is-admin.playground.local/signout-callback-oidc'
      - 'IdentityServerData__Clients__0__AllowedCorsOrigins__0=https://is-admin.playground.local'
      - 'IdentityServerData__Clients__1__RedirectUris__0=https://is-admin-api.playground.local/swagger/oauth2-redirect.html'
      - 'Serilog__WriteTo__1__Args__connectionString=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    command: dotnet Playground.IdentityServer.Admin.dll /seed
    depends_on:
      - db
      - playground.identityserver.sts.identity
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/identitydata.json:/app/identitydata.json'
      - './shared/identityserverdata.json:/app/identityserverdata.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      playground: null

  playground.identityserver.admin.api:
    image: '${DOCKER_REGISTRY-}playground-duende-identityserver-admin-api'
    build:
      context: .
      dockerfile: Playground.IdentityServer/src/Playground.IdentityServer.Admin.Api/Dockerfile
    container_name: playground-duende-identityserver-admin-api
    environment:
      - VIRTUAL_HOST=is-admin-api.playground.local
      - AdminApiConfiguration__RequireHttpsMetadata=false
      - 'AdminApiConfiguration__ApiBaseUrl=https://is-admin-api.playground.local'
      - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.playground.local'
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiv`eResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      playground: null

  playground.identityserver.sts.identity:
    image: '${DOCKER_REGISTRY-}playground-duende-identityserver-sts-identity'
    build:
      context: .
      dockerfile: Playground.IdentityServer/src/Playground.IdentityServer.STS.Identity/Dockerfile
    container_name: playground-duende-identityserver-sts-identity
    environment:
      - VIRTUAL_HOST=sts.playground.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://is-admin.playground.local'
      - 'AdvancedConfiguration__IssuerUri=https://sts.playground.local'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      playground:
        aliases:
          - sts.playground.local
  db:
    image: 'mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04'
    ports:
      - '7900:1433'
    container_name: playground-duende-identityserver-db
    environment:
      SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
      ACCEPT_EULA: 'Y'
    volumes:
      - 'dbdata:/var/opt/mssql'
    networks:
      playground: null
# End Skoruba Identity Server projects

# Start Playground projects
  playgrounddb:
    image: postgres
    container_name: playgrounddb
    restart: always
    environment:
      - POSTGRES_USER=baonguyen
      - POSTGRES_PASSWORD=P@ss123
      - POSTGRES_DB=PlaygroundDb
    ports:
      - "7901:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      playground: null
    
  playground.api:
    image: ${DOCKER_REGISTRY-}playground-api
    build:
      context: .
      dockerfile: src/Playground.WebApi/Dockerfile
    container_name: playground-api
    ports:
      - "7000:80"
    environment:
      - VIRTUAL_HOST=playground-api.playground.local
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiConfiguration__RequireHttpsMetadata=false
      - ApiConfiguration__ApiBaseUrl=https://api.playground.local
      - ApiConfiguration__IdentityServerBaseUrl=https://sts.playground.local
      - "ConnectionStrings:postgres=Host=playgrounddb;Port=5432;Username=baonguyen;Password=P@ss123;Database=PlaygroundDb"
      - DockerConfiguration__UpdateCaCertificate=true
    depends_on:
      - playgrounddb
    volumes:
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      playground: null
# End Playground projects

volumes:
  dbdata:
    driver: local
  postgres_data:
    driver: local

networks:
  proxy:
    driver: bridge
  playground:
    driver: bridge
